buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.4.RELEASE'
	}
}

plugins {
	id "org.asciidoctor.convert" version "1.5.2"
	id "org.xtend.xtend" version "0.4.7"
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'

repositories {
	mavenLocal()
	maven { url 'https://repo.spring.io/snapshot' }
	mavenCentral()
}

group = 'com.example'

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
	
	compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.8.+'
	compile 'org.springframework.boot:spring-boot-starter-data-rest'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'

	runtime 'com.h2database:h2'

	testCompile 'com.jayway.jsonpath:json-path'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'org.springframework.restdocs:spring-restdocs:1.0.0.BUILD-SNAPSHOT'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	systemProperty 'org.springframework.restdocs.outputDir', snippetsDir
	outputs.dir snippetsDir
}

asciidoctor {
	sourceDir 'src/main/asciidoc' // Align with Maven's default location
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
	dependsOn test
}

jar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}

eclipseJdt.onlyIf { false }
cleanEclipseJdt.onlyIf { false }